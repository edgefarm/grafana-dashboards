#!/bin/bash
# This script is supposed to be called from the location of the script (charts/grafana-dashboards/scripts)

set -e

function createDashboardTemplate() {
  # Parameters
  local configmap_name=$1
  local file_path=$2
  local output_file=$3

  # Extract the filename from the file path to use as the key in the ConfigMap
  local file_name=$(basename "$file_path")

  # Create a temporary yaml file
  local temp_file=$(mktemp)

  echo "{{- if.Values.dashboards.edgeNodes.enabled }}" >"$temp_file"

  # Write the ConfigMap to the temporary file
  cat <<EOF >>$temp_file
---
# This file is generated by charts/grafana-dashboards/scripts/edge_nodes.sh
# Do not edit this file manually
apiVersion: v1
kind: ConfigMap
metadata:
  name: $configmap_name
  namespace: "{{ .Release.Namespace }}"
  labels:
    grafana_dashboard: ""
    {{- include "grafana-dashboards.labels" . | nindent 4 }}
data:
  $file_name: |-
EOF

  # Append the contents of the file to the ConfigMap
  sed 's/^/    /' "$file_path" >>"$temp_file"

  echo -e "\n{{- end }}" >>"$temp_file"

  ## Search and Replace the legendFormat if it contains variables like {{ variable}} to
  ## make them work with helm (put raw string around them {{ ` raw string ` }})
  ## example: "legendFormat": "{{chip}}-{{sensor}}" to "legendFormat": {{`"{{chip}}-{{sensor}}",`}}
  sed -ri 's#\"legendFormat\": \"(.*)\",#\"legendFormat\": \{\{`\"\1\",`\}\}#g' "$temp_file"

  cat "$temp_file" >"$output_file"

  # Remove the temporary file
  rm "$temp_file"
}

createDashboardTemplate "dashboard-edge-nodes" "../../../dashboards/edge_nodes.json" "../templates/dashboard-edge-nodes.yaml"
